# 1-9
width = 4.5
height = 7.9

area = width*height
perimeter = 2*(width+height)

print("area:",area)
print("perimeter:",perimeter)

#1-10
sectime = (45*60) + 30
hourtime = (14/sectime)*60*60
MPH = hourtime/1.6

print("MPH:", MPH)

#1-11

DayBirth = (24*60*60) // 7
DayDeath = (24*60*60) // 13
DayImmigration = (24*60*60) // 45
DayPeople = DayBirth+DayImmigration-DayDeath
NowPeople = 312032486
term = 365*5
NowPeople = DayPeople* term + NowPeople
print("NowPeople:",NowPeople)

#2-4

pound = float(input('파운드값을 입력하시오:'))
kilogram = 0.454* pound

print("킬로그램:",round(kilogram,3))

#2-5

subTotal = float(input('소계를 입력하시오:'))
tip = float(input('비율을 입력하시오:'))

Total = subTotal+(subTotal*tip/100)

print("Total:",round(Total,2))

#2-6
num = float(input('0과 1000사이의 숫자를 입력하세요:'))

hundred = num//100
ten = num//10%10
one = num%10

sum = hundred + ten + one

print("이 자릿수들의 합:", sum)

#2-7
minute = float(input('분에 대한 숫자를 입력하세요:'))

year = minute//(60*24*365)
day = (minute%(60*24*365))//(60*24)

print("약",year,"년",day,"일 입니다." )

#2-9

temparature = float(input('화씨 -58 와 41 사이의 온도를 입력하세요:'))
windSpeed = float(input('풍속을 시간 당 마일 단위로 입력하세요:'))

Sensible = 35.74 + (0.6215*temparature) - (35.75*pow(windSpeed,0.16)) +(0.4275 * temparature*pow(windSpeed,0.16))

print("체감온도는",round(Sensible,5),"입니다")

# 2- 11 모르겠음

amount = float(input('약정 금액을 입력하세요:'))
rate = float(input('연이율을 입력하세요:'))
term= float(input('약정 기간을 입력하세요:'))

rate = rate/12
term = term*12
payment = amount / (pow((1+rate), term))
print ("월납임금은",payment,"입니다.")

#2-17 모르겟음
pounds = eval(input("몸무게 파운드로 입력: "))
inches= eval(input("키 인치로 입력: "))

bmi = pounds * 0.45359237 / ((inches * 0.0254) * (inches * 0.0254))

print("BMI는", bmi)

#3-6

code = int(input('아스키 코드를 입력하세요:'))


print("문자는",chr(code),"입니다.")

# 3-7
import time
rand = int((time.time()) % 25)

rand = rand + 65

print("문자는",chr(rand),"입니다.")

# 3-8

name = (input('사원 이름을 입력하세요:'))
workhour = float(input('주 당 근무시간을 입력하세요:'))
salary = float(input('시간 당 급여를 입력하세요:'))
tax = float(input('원천징수세율을 입력하세요:'))
localtax = float(input('지방세율을 입력하세요:'))

sumsalary = workhour * salary
tax = sumsalary*tax
localtax = sumsalary * localtax

sumtax = tax + localtax
sum = sumsalary - sumtax

print("사원이름:",name)
print("주당근무시간:",workhour)
print("임금:",salary)
print("총급여:",sumsalary)
print("공제:")
print(" 원천징수제:",tax)
print(" 주민세:",localtax)
print(" 총 공제:",sumtax)
print("공제 후 급여:",sum)


# 10-2

b = input("숫자를 입력하시오:")

s = ''.join(reversed(b))

print(s)


# 10 - 3 
from collections import Counter
myList =  input("숫자를 입력하시오:")
result = Counter(myList)

for key in result:
    print (key,"=", result[key], "개")

# 10 - 2
scoreList = [int(x) for x in input("점수들을 입력해주세요.(공백으로 구분): ").split(" ")]

scoreLen = len(scoreList)
totalScore = 0
avgScore = 0
high = 0
low = 0

for i in range(0,scoreLen):
    totalScore += scoreList[i]

avgScore = totalScore / scoreLen

for i in range(0,scoreLen):
    if(scoreList[i] > avgScore):
        high += 1
    else:
        low += 1

print("평균점수: %d, 평균이상: %d명, 평균이하: %d명" %(avgScore, high, low))

# 6 - 3

number = input("숫자를 입력하시오:")
#b = "/".join(b)
#a = b.split("/")

def reverse(number):
    s = ''.join(reversed(number))
    return s

def isPalindrome(s):
    if number == s:
        print("True")
    else :
        print("False")

isPalindrome(reverse(number))


# 6-4
number = input("숫자를 입력하시오:")
#b = "/".join(b)
#a = b.split("/")

def reverse(number):
    s = ''.join(reversed(number))
    print(s)

reverse(number)


# 6-5

number = input("숫자를 입력하시오:")

a = number.split(",")

def displaySortedNumvers(num1, num2, num3):
    mylist = [num1, num2, num3 ]
    mylist.sort()
    print(mylist)

displaySortedNumvers(a[0], a[1], a[2])

#6-12 
def printChars(ch1, ch2, numberPerLine):
    cnt = 1

    for i in range(ord(ch1), ord(ch2)+1):
        if cnt% numberPerLine == 0:
            print(chr(i))
        else:
            print(chr(i), end = " ")
        cnt += 1

printChars('1', 'Z', 10)

#6-13

sum = 0
for P in range(1,20,1):
    sum += (float)(P/(P+1))
    print(P, sum)

# 4-1

import math
a, b, c = eval(input("A, B, C 입력: "))
det = b*b-4*a*c
print(det)
if det<0:
    print("이 방정식은 실근이 존재하지 않습니다.")
elif det==0:
    print("실근은 ",str(b/(-2*a)))
else:
    va1=(-1*b+math.sqrt(det))/2*a
    va2=(-1*b-math.sqrt(det))/2*a
    print("실근은",str(va1),str(va2))


#15 - 3
def gcd(m ,n):
    if(int(m) % int(n) == 0):
        print(n)
    else:
        gcd(int(n), int(m) % int(n))

s1, s2= input('두 수를 입력하세요: ').split(", ")

i1 = int(s1)

i2 = int(s2)

gcd(s1, s2)


#15-4
def gcd(i, k, sum):
    sum = sum + 1 / i
    if(float(i) < float(k)):
        i = i + 1
        gcd(i, k, sum)
    else:
        print(sum)

for i in range(1,11):
    gcd(1, i , 0)

# 15 - 18
k = 1

def main():
    n = eval(input("디스크의 개수를 입력하세요: "))
    moveDisks(n, 'A', 'B', 'C')
    #해결 방법을 재귀적으로 찾는다.
    print("옮기는 순서는 다음과 같습니다:")

# auxTower를 사용하여 fromTower에서 toTower까지
# n개의 디스크를 옮기는 해결방법을 찾는 함수
def moveDisks(n, fromTower, toTower, auxTower):
    global k
    if n==1: #정지 조건
        print("디스크 ", n, "을/를 ", fromTower, "에서 ", toTower, "로 옮긴다.")
    else:
        moveDisks(n-1, fromTower, auxTower, toTower)
        print("디스크 ", n, "을/를 ", fromTower, "에서 ", toTower, "로 옮긴다.")
        moveDisks(n-1, auxTower, toTower, fromTower)
        k = k+2
main()
print(k)